@page "/sidebar"

<RadzenLayout>
<RadzenHeader>
    <ChildContent>
        <div class="row justify-content-start align-items-center">
            <div class="col-5 d-flex align-items-center">
                <RadzenSidebarToggle Click="@(args => { sidebarExpanded = !sidebarExpanded; bodyExpanded = !bodyExpanded; })">
                </RadzenSidebarToggle>
                <RadzenLabel Text="Your Logo" style="overflow: hidden; white-space: nowrap; text-overflow: ellipsis;">
                </RadzenLabel>
            </div>
            <div class="col-7 d-flex align-items-center justify-content-end">
                <a href="https://github.com/radzenhq/radzen-blazor" title="GitHub" target="_blank" class="mx-3">
                    <svg width="24" height="24" viewBox="0 0 512 499.36" xmlns="http://www.w3.org/2000/svg">
                    <title>GitHub</title>
                    <path fill="currentColor" fill-rule="evenodd" d="M256 0C114.64 0 0 114.61 0 256c0 113.09 73.34 209 175.08 242.9 12.8 2.35 17.47-5.56 17.47-12.34 0-6.08-.22-22.18-.35-43.54-71.2 15.49-86.2-34.34-86.2-34.34-11.64-29.57-28.42-37.45-28.42-37.45-23.27-15.84 1.73-15.55 1.73-15.55 25.69 1.81 39.21 26.38 39.21 26.38 22.84 39.12 59.92 27.82 74.5 21.27 2.33-16.54 8.94-27.82 16.25-34.22-56.84-6.43-116.6-28.43-116.6-126.49 0-27.95 10-50.8 26.35-68.69-2.63-6.48-11.42-32.5 2.51-67.75 0 0 21.49-6.88 70.4 26.24a242.65 242.65 0 0 1 128.18 0c48.87-33.13 70.33-26.24 70.33-26.24 14 35.25 5.18 61.27 2.55 67.75 16.41 17.9 26.31 40.75 26.31 68.69 0 98.35-59.85 120-116.88 126.32 9.19 7.9 17.38 23.53 17.38 47.41 0 34.22-.31 61.83-.31 70.23 0 6.85 4.61 14.81 17.6 12.31C438.72 464.97 512 369.08 512 256.02 512 114.62 397.37 0 256 0z"></path>
                    </svg>
                </a>
            </div>
        </div>
    </ChildContent>
</RadzenHeader>
<RadzenBody @bind-Expanded="@bodyExpanded" Style="height:max-content">
    <ChildContent>
        <RadzenContentContainer>
                <RadzenTabs SelectedIndex="@selectedIndex" RenderMode="TabRenderMode.Server">
                    <Tabs>
                        @foreach (var x in Tabs)
                        {
                                    <RadzenTabsItem ChildContent="x.ChildContent">
                                    <Template>
                                        <div class="row">
                                            <div class="col-md-8">
                                                <RadzenText Style="font-size:12px; width:max-content;" Text="@x.Text" />
                                            </div>
                                            <div class="col-md-3">
                                                <RadzenIcon Icon="highlight_off" @onclick="() => RemoveTab(x.Text)" />
                                            </div>
                                        </div>
                                    </Template>
                                </RadzenTabsItem>
                        }
                    </Tabs>
                </RadzenTabs>
        </RadzenContentContainer>
    </ChildContent>
</RadzenBody>
<RadzenSidebar @ref="@sidebar0" @bind-Expanded="@sidebarExpanded" class="demos-sidebar" style="display: flex; flex-direction: column; background-color:lightgray;">
    <div>
        <RadzenPanelMenu Match="NavLinkMatch.Prefix" Click="@PanelMenuClick" Style="background-color:lightgray; color:black;">
                @foreach (var menu in _daftarMenu)
                {
                    <RadzenPanelMenuItem Text="@menu.Inisial">

                    </RadzenPanelMenuItem>
                }
        </RadzenPanelMenu>
    </div>
</RadzenSidebar>
</RadzenLayout>
@code {
    RadzenSidebar sidebar0;
    bool sidebarExpanded = true;
    bool bodyExpanded = false;
    int selectedIndex = 0;
    List<Menu> _daftarMenu = new();
    Menu _selectedMenu = new();
    protected override async void OnInitialized()
    {
        _daftarMenu.Add(new Menu
        {
            Nama = "Cuaca",
            Inisial = "Cuaca",
            NamaHalaman = "ConMaster"

        });
        _daftarMenu.Add(new Menu
        {
            Nama = "Counter",
            Inisial = "Counter",
            NamaHalaman = "Counter"

        });
         _daftarMenu.Add(new Menu
        {
            Nama = "Index",
            Inisial = "Index",
            NamaHalaman = "Index"

        });
    }

    RadzenTabs TabComponent = new();
    public List<Radzen.Blazor.RadzenTabsItem> Tabs { get; set; } = new();

    async Task PanelMenuClick(Radzen.MenuItemEventArgs args)
    {
        var data = _daftarMenu.FirstOrDefault(e => e.Inisial == args.Text);
        RenderFragment rf = (builder) => { builder.OpenComponent(1, Type.GetType($"DX.Pages.{data.NamaHalaman}")); builder.CloseComponent(); };
        var tab = new RadzenTabsItem()
            {
                Text = data.Inisial,
                ChildContent = rf,
            };
        selectedIndex = Tabs.Count - 1;
        Tabs.Add(tab);
    }

    void RemoveTab(string id)
    {
        var tab = Tabs.FirstOrDefault(x => x.Text == id);
        Tabs.Remove(tab);
    }

    public class Menu
    {
        public string Nama { get; set; }
        public string Inisial { get; set; }
        public string NamaHalaman { get; set; }
    }

}
